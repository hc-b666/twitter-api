name: Units Tests, Coverage & Benchmarks

on:
  pull_request:

permissions:
  pull-requests: write
  contents: write
  pages: write

concurrency:
  group: ${{ github.actor }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        options: >-
          --name postgres
          -e POSTGRES_USER=postgres
          -e POSTGRES_PASSWORD=postgres
          -e POSTGRES_DB=db
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
          check-latest: true
          cache-dependency-path: |
            ./go.sum

      - name: Install dependencies
        run: |
          go mod tidy
          go install github.com/t-yuki/gocover-cobertura@latest

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out.mocks -covermode=atomic
          grep -v 'mock' coverage.out.mocks > coverage.out # remove mocks from coverage report

      - name: Convert coverage to Cobertura format
        run: $(which gocover-cobertura) < coverage.out > coverage.xml

      - name: Coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          indicators: true
          output: both
          thresholds: "70 80"

      - name: Add coverage report to pull request
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
